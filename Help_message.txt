[C++]
So, i have some of the following code blocks,

{Variable Declaration}
```C++
    std::complex<double> iter1(0, 0);
    std::complex<double> iter2(0, 0);
    std::complex<double> iter3(0, 0);
    std::complex<double> iter4(0, 0);
    std::complex<double> iter5(0, 0);
    std::complex<double> iter6(0, 0);
    std::complex<double> iter7(0, 0);
```

{Math}
```C++
iter2 = iter1;
        iter2 = std::pow(iter2, 2) + C;

        iter3 = iter2;
        iter3 = std::pow(iter3, 2) + C;

        iter4 = iter3;
        iter4 = std::pow(iter4, 2) + C;

        iter5 = iter4;
        iter5 = std::pow(iter5, 2) + C;

        iter6 = iter5;
        iter6 = std::pow(iter6, 2) + C;
...
```

{Text Drawing}
```C++
        DrawLine(std::real(iter1) * 100.0, std::imag(iter1) * 100.0, std::real(iter2) * 100.0, std::imag(iter2) * 100.0, BLACK);
        DrawLine(std::real(iter2) * 100.0, std::imag(iter2) * 100.0, std::real(iter3) * 100.0, std::imag(iter3) * 100.0, BLACK);
        DrawLine(std::real(iter3) * 100.0, std::imag(iter3) * 100.0, std::real(iter4) * 100.0, std::imag(iter4) * 100.0, BLACK);
        DrawLine(std::real(iter4) * 100.0, std::imag(iter4) * 100.0, std::real(iter5) * 100.0, std::imag(iter5) * 100.0, BLACK);
        DrawLine(std::real(iter5) * 100.0, std::imag(iter5) * 100.0, std::real(iter6) * 100.0, std::imag(iter6) * 100.0, BLACK);
```

And i basically want to define one int with a number and all of those things get done that many times, eg. that variable is 16, it creates variable `iter` until `iter16` and does `DrawLine` 16 times with all the `iter` variables "right". I thought about using makros but i have no idea how to use them right in this language, sadly, it doesnt work like it would in ABAP
